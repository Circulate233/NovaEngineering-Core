item.hypernet_connect_card.tooltip.1=§9这张存储卡可以储存一个 HyperNet 网络的频段和坐标信息，存储的密钥经过重重加密。
item.hypernet_connect_card.tooltip.2=§9右击支持 HyperNet 的机械控制器，即可自动解析存储卡并连接至 HyperNet 计算网络。
item.hypernet_connect_card.tooltip.3=§a存储卡可以重复使用。
item.hypernet_connect_card.tooltip.4=§c警告：使用时请保持 HyperNet 计算网络中心在线。HyperNet 通讯距离无限，但是无法跨越维度。
item.hypernet_connect_card.tooltip.no_pos.tip.0=§b存储卡中保存的坐标：§e空
item.hypernet_connect_card.tooltip.no_pos.tip.1=§2右击任意等级的计算网络中心控制器来写入数据。
item.hypernet_connect_card.tooltip.pos.tip.0=§b存储卡中保存的坐标：§a（X: %s, Y: %s, Z: %s）
item.hypernet_connect_card.tooltip.pos.tip.1=§2右击任意等级的计算网络中心控制器来覆写数据。

item.novaeng_core.estorage_cell_item_16m.name=§9ECO - §bLE4 §9存储矩阵§a（物品）
item.novaeng_core.estorage_cell_item_64m.name=§9ECO - §6LE6 §9存储矩阵§a（物品）
item.novaeng_core.estorage_cell_item_256m.name=§9ECO - §5LE9 §9存储矩阵§a（物品）

item.novaeng_core.estorage_cell_fluid_16m.name=§9ECO - §bLE4 §9存储矩阵§b（流体）
item.novaeng_core.estorage_cell_fluid_64m.name=§9ECO - §6LE6 §9存储矩阵§b（流体）
item.novaeng_core.estorage_cell_fluid_256m.name=§9ECO - §5LE9 §9存储矩阵§b（流体）

novaeng.estorage_cell.insert.tip=蹲下时手持矩阵并右击驱动器以插入矩阵。
novaeng.estorage_cell.extract.tip=蹲下时空手并右击驱动器以取出矩阵。
novaeng.estorage_cell.l6.tip=§c只有 §6L6§c 等级及以上的主机可以驱动此矩阵。
novaeng.estorage_cell.l9.tip=§c只有 §6L9§c 等级的主机可以驱动此矩阵。

novaeng.estorage_cell_drive.player.inserted=§a已插入存储矩阵。
novaeng.estorage_cell_drive.player.removed=§a已取出存储矩阵。
novaeng.estorage_cell_drive.player.no_permission=§c访问被拒绝（原因：无 ME 网络权限）。

novaeng.hypernet.connect.result.success=§a连接成功§b（状态：%s 已连接 / %s 最大连接数）。
novaeng.hypernet.connect.result.no_permission=§c连接失败，HyperNet 网络授权密钥不匹配（原因：非网络所有者）。
novaeng.hypernet.connect.result.unknown_center=§c连接失败（原因：未知的计算网络中心，区块可能被卸载或控制器不存在）。
novaeng.hypernet.connect.result.center_not_working=§c连接失败（原因：计算网络中心处于离线状态）。
novaeng.hypernet.connect.result.center_reached_connection_limit=§c连接失败（原因：已达到计算网络中心的最大连接数：%s）。
novaeng.hypernet.connect.result.unsupported_node=§c连接失败（原因：未知的网络节点）。
novaeng.hypernet.connect.result.node_type_reached_max_presences=§c连接失败（原因：已达到当前网络节点类型的连接上限：%s）。

novaeng.hypernet.connect_card.write_failed.no_permission=§cHyperNet 网络授权访问被拒绝（原因：非网络所有者）。

novaeng.hypernet.connect_card.write_success=§a写入成功。
novaeng.hypernet.connect_card.write_success.new_owner=§a写入成功，并且现在您是此网络中心的所有者。

upgrade.data_processor.module.cpu.tip.0=§9CPU 模块为数据处理计算机提供算力。
upgrade.data_processor.module.cpu.tip.1=§9耐久低于 §e25%%§9 时，算力产出逐渐开始§c降低§9，最多 §c25%%。
upgrade.data_processor.module.cpu.tip.2=§9工作时每秒有 §a10%% §9的概率降低 §e1 §9点耐久。

upgrade.data_processor.module.gpu.tip.0=§9GPU 模块为数据处理计算机提供§2大量§9算力。
upgrade.data_processor.module.gpu.tip.1=§9耐久低于 §e50%%§9 时，算力产出逐渐开始§c降低§9，最多 §c50%%。
upgrade.data_processor.module.gpu.tip.2=§9工作时每秒有 §a10%% §9的概率降低 §e1 §9点耐久。

upgrade.data_processor.module.cpu.generate=§9算力: §b%s§9 (效率: %s)

upgrade.data_processor.module.ram.tip.0=§9内存模块将决定数据处理计算机产出的算力§e上限§9。
upgrade.data_processor.module.ram.tip.1=§9耐久低于 §e25%%§9 时，算力产出逐渐开始§c降低§9，最多 §c25%%。
upgrade.data_processor.module.ram.tip.2=§9工作时每秒有 §a10%% §9的概率降低 §e1 §9点耐久。

upgrade.data_processor.module.ram.limit_provision=§9上限提供: §e%s§9 (效率: %s)

upgrade.data_processor.module.energy.tip=§9最大功耗：§c%s
upgrade.data_processor.module.durability.tip=§9耐久：§e%s / %s§a（%s）
upgrade.data_processor.module.durability.unknown.tip=§9最大耐久（等待计算机初始化）：§e%s ～ %s

top.hypernet.online=§9HyperNet 网络状态：§a已连接
top.hypernet.offline=§9HyperNet 网络状态：§c断开连接

top.hypernet.connected=§9网络当前在线设备数量：

top.hypernet.computation_point_consumption=§9算力消耗：
top.hypernet.computation_point_generation=§9算力产出：

top.hypernet.research_station.current=§9当前研究：
top.hypernet.research_station.current.empty=§9当前研究：§c无
top.hypernet.research_station.progress=§9研究进度

top.hypernet.database.stored.research=§9已存储研究认知数量：
top.hypernet.database.stored.research.max=§9最大研究认知存储数量：

top.hypernet.computation_point.total=§9网络总算力消耗 / 产出：

top.hypernet.processor.generation=§9当前算力 / 最大算力：
top.hypernet.processor.efficiency=§9工作效率：
top.hypernet.processor.load=§9平均负载：
top.hypernet.processor.circuit_durability=§9电路板耐久剩余：
top.hypernet.processor.heat=§9内部热量：

top.estorage.drive.status=§9驱动器状态：
top.estorage.drive.status.offline=§c离线
top.estorage.drive.status.online=§a在线
top.estorage.drive.cell=§9驱动器矩阵：
top.estorage.drive.cell.unsupported=§c警告：驱动器不支持此矩阵等级，需要升级主机。
top.estorage.drive.cell.bytes=§9字节使用：
top.estorage.drive.cell.types=§9类型使用：

tile.novaeng_core.hypernet_terminal_controller.name=HyperNet 网络终端
tile.novaeng_core.modular_server_assembler.name=模块服务器组装台（未实装）
tile.novaeng_core.angel_block.name=天使方块+
tile.novaeng_core.angel_block.tip.0=天使方块，但是更加智能！
tile.novaeng_core.angel_block.tip.1=允许你在没有任何方块的情况下虚空放置方块。
tile.novaeng_core.angel_block.tip.2=手持此物品时可在世界预览即将放置的位置。
tile.novaeng_core.angel_block.tip.3=按住 Shift 时，则固定在脚下放置此方块。
tile.novaeng_core.extendable_digital_storage_subsystem_l4.name=§9ECO - §bL4 §9可扩展存储子系统主机
tile.novaeng_core.extendable_digital_storage_subsystem_l6.name=§9ECO - §6L6 §9可扩展存储子系统主机
tile.novaeng_core.extendable_digital_storage_subsystem_l9.name=§9ECO - §5L9 §9可扩展存储子系统主机
tile.novaeng_core.estorage_energy_cell_l4.name=§9ECO - §bLT4 §9高密度能量元件
tile.novaeng_core.estorage_energy_cell_l6.name=§9ECO - §6LT6 §9高密度能量元件
tile.novaeng_core.estorage_energy_cell_l9.name=§9ECO - §5LT9 §9高密度能量元件
tile.novaeng_core.estorage_cell_drive.name=§9ECO - §bLD §9存储矩阵驱动器
tile.novaeng_core.estorage_me_channel.name=§9ECO - §bLR §9ME 矩阵通讯接口
tile.novaeng_core.estorage_vent.name=§9存储系统结构散热器
tile.novaeng_core.estorage_casing.name=§9存储系统结构外壳

novaeng.hypernet.computation_point_required.tip=§9算力：§b%s
novaeng.hypernet.computation_point_required.tip.parallelized=§9算力 (受并行影响)：§b%s

novaeng.hypernet.calculable.tip.base_ratio=§b基础效率系数：§a%s
novaeng.hypernet.calculable.tip.energy_consume_ratio=§b设计最大能耗：§c%s RF/t
novaeng.hypernet.calculable.tip.hardware_bandwidth=§b硬件带宽占用：§a%s
novaeng.hypernet.calculable.supported=此模块可提供计算功能。

novaeng.hypernet.calculate.tip.efficiency=%s：%s（效率：%s%%）

novaeng.hypernet.calculate.type_name.intricate=§b复杂运算§f
novaeng.hypernet.calculate.type_name.logic=§9密集运算§f
novaeng.hypernet.calculate.type_name.neuron=§c神经网络§f
novaeng.hypernet.calculate.type_name.qbit=§e量子位§f

novaeng.hypernet.calculate.type.intricate=§a%s §b次复杂运算/t§f
novaeng.hypernet.calculate.type.logic=§a%s §9次密集运算/t§f
novaeng.hypernet.calculate.type.neuron=§a%s §c神经网络规模§f
novaeng.hypernet.calculate.type.qbit=§a%s §e量子位§f

novaeng.hypernet.research_required.tip=§6需要研究认知：§f%s

gui.hypernet.controller.title=§9///////// HyperNet 代理网络 /////////
gui.hypernet.controller.computation_point_consumption=§9算力消耗：§b
gui.hypernet.controller.computation_point_consumption.total=§9总算力消耗 / 产出：§b%s / %s
gui.hypernet.controller.connected=§9网络状态：§a已连接
gui.hypernet.controller.disconnected=§9网络状态：§c断开连接
gui.hypernet.controller.version=§7HyperNet Proxy Monitor v1.0
gui.hypernet.controller.footer=§9/////////////////////////////////////////

novaeng.hypernet.maintenance_controller=维护控制器
novaeng.hypernet.data_forwarding_processor=数据转发处理器

novaeng.hypernet.craftcheck.durability.failed=电路板状态良好。
novaeng.hypernet.craftcheck.heat_distribution.failed=当前无需使用冷却液散热。

novaeng.hypernet.computation_center.working.tooltip.0=闲置状态下，始终会消耗机械基础耗电量。
novaeng.hypernet.computation_center.working.tooltip.1=每连接 §a1 §f个机械，最终耗电量 §c+5%%§f。

novaeng.hypernet.data_processor.compute_scheduler=计算调度器
novaeng.hypernet.data_processor.radiator=外置散热控制器
novaeng.hypernet.data_processor.working.tooltip.0=闲置状态下，始终会消耗机械基础耗电量。
novaeng.hypernet.data_processor.working.tooltip.1=最终耗电量取决于处理器模块当前的负载。

novaeng.hypernet.database.working.tooltip.0=闲置状态下，始终会消耗机械基础电量。
novaeng.hypernet.database.working.tooltip.1=每存储 §a1 §f个研究认知，最终耗电量 §c+10%%§f。

novaeng.hypernet.research_station.hypercol=HyperCol AI
novaeng.hypernet.research_station.working.tooltip.0=仅在工作状态下消耗能量。
novaeng.hypernet.research_station.working.tooltip.1=工作状态下根据当前研究，消耗指定数量的算力。

novaeng.hypernet.repair.tooltip=完成时，修复 §a%s §f点耐久值。
novaeng.hypernet.radiator.tooltip=工作时，每秒可以吸收 §c%sHU§f 内部热量。

novaeng.hypernet.tech_level.1=§a1§a.
novaeng.hypernet.tech_level.2=§a2§a.
novaeng.hypernet.tech_level.3=§a3§a.
novaeng.hypernet.tech_level.4=§b4§b.
novaeng.hypernet.tech_level.5=§b5§b.
novaeng.hypernet.tech_level.6=§56§5.
novaeng.hypernet.tech_level.7=§57§5.
novaeng.hypernet.tech_level.8=§68§6.
novaeng.hypernet.tech_level.9=§69§6.
novaeng.hypernet.tech_level.10=§610§6.
novaeng.hypernet.tech_level.11=§c11§c.
novaeng.hypernet.tech_level.12=§c12§c.
novaeng.hypernet.tech_level.13=§413§4.
novaeng.hypernet.tech_level.14=§414§4.

novaeng.adapter.mc.furnace.exp=完成时，添加 §a%s §f点经验。

gui.toast.research.complete=HyperNet 研究已完成！

gui.terminal_controller.title.nxc=nxc 的虚空终端
gui.terminal_controller.search=§7§o搜索研究...
gui.terminal_controller.status=§b状态：
gui.terminal_controller.status.missing_structure=§c结构不完整
gui.terminal_controller.status.online=§a终端在线
gui.terminal_controller.status.offline=§c终端离线
gui.terminal_controller.status.network.computation_point_consumption=§9总算力消耗：
gui.terminal_controller.status.network.computation_point_generation=§9总算力产出：
gui.terminal_controller.status.network.computation_point.info=§b%s
gui.terminal_controller.status.network.total_connected=§9在线设备数量：§b

gui.terminal_controller.connect_card.empty=请插入密钥卡
gui.terminal_controller.connect_card.validate=§a密钥卡已识别
gui.terminal_controller.connect_card.invalidate=§c无效的密钥卡

gui.terminal_controller.data.unlocked=研究已解锁
gui.terminal_controller.data.locked=研究可用
gui.terminal_controller.data.unavailable=研究不可用
gui.terminal_controller.data.progress=研究进度：%s

gui.terminal_controller.screen.none=点击左侧的研究认知卡以预览。

gui.terminal_controller.screen.info.dependencies=前置研究：
gui.terminal_controller.screen.info.dependencies.none=§2无
gui.terminal_controller.screen.info.tech_level=科技等级：
gui.terminal_controller.screen.info.required_points=需要研究点：§9
gui.terminal_controller.screen.info.min_computation_point_per_tick=最低算力要求：§b

gui.terminal_controller.screen.info.unavailable.0=§c研究描述不可用。
gui.terminal_controller.screen.info.unavailable.1=§c解锁该研究所有的前置研究以继续。

gui.terminal_controller.screen.info.toggle=§a点击切换未解锁和解锁状态的研究描述。§f

gui.terminal_controller.screen.info.start=§a左击向研究站发送当前研究任务。
gui.terminal_controller.screen.info.start.instant=§9中键点击向研究站强制发送当前研究任务，并立即完成研究（需要创造模式，网络中数据库已满时可能无法发送）。
gui.terminal_controller.screen.info.reset=§e右击取消研究站当前正在进行的任务。
gui.terminal_controller.screen.info.start.time=§9预计耗时：%s 小时 %s 分钟 %s 秒（%s Ticks）。
gui.terminal_controller.screen.info.start.warn.computation=§e警告：当前算力可能不足以完成研究。
gui.terminal_controller.screen.info.start.error=§c无法开始研究。
gui.terminal_controller.screen.info.start.error.tech_level=§c未找到研究站或研究站等级过低。
gui.terminal_controller.screen.info.start.error.computation=§c算力不足。
gui.terminal_controller.screen.info.start.error.database_space=§c未找到网络数据库或网络数据库空间已满。
gui.terminal_controller.screen.info.start.error.dependencies=§c缺失前置研究：%s

gui.modular_server_assembler.assembly.cpu.name=CPU 槽位 §a#%s
gui.modular_server_assembler.assembly.cpu_heat_radiator.name=CPU 散热器槽位 §a#%s
gui.modular_server_assembler.assembly.cpu_ext.name=CPU 扩展板槽位
gui.modular_server_assembler.assembly.ram.name=RAM 槽位 §a#%s
gui.modular_server_assembler.assembly.ram_heat_radiator.name=RAM 散热器槽位 §a#%s

gui.modular_server_assembler.assembly.calculate_card.name=计算卡槽位 §a#%s
gui.modular_server_assembler.assembly.calculate_card_heat_radiator.name=计算卡散热器槽位 §a#%s
gui.modular_server_assembler.assembly.calculate_card_ext.name=计算卡总线槽位 §a#%s

gui.modular_server_assembler.assembly.extension.name=扩展卡槽位 §a#%s
gui.modular_server_assembler.assembly.extension_card_heat_radiator.name=扩展卡散热器槽位 §a#%s
gui.modular_server_assembler.assembly.extension_ext.name=扩展卡总线槽位 §a#%s

gui.modular_server_assembler.assembly.psu.name=PSU 电源槽位 §a#%s
gui.modular_server_assembler.assembly.capacitor.name=电容槽位 §a#%s

gui.modular_server_assembler.assembly.invalid=§4插槽内物品无效，请移除。
gui.modular_server_assembler.assembly.dependencies=以下插槽必须安装后才可解锁本插槽：
gui.modular_server_assembler.assembly.dependencies.installed=§a（已安装）§f
gui.modular_server_assembler.assembly.dependencies.uninstalled=§c（缺失）§f
gui.modular_server_assembler.assembly.dependents=此插槽安装后解锁以下插槽：

gui.modular_server_assembler.assembly.soft_dependencies=此插槽安装后还需要以下插槽安装后才可完全工作：
gui.modular_server_assembler.assembly.soft_dependents=此插槽安装后以下插槽才可完全工作：

gui.modular_server_assembler.assembly.inv.change.main=点击切换至组件插槽窗口。
gui.modular_server_assembler.assembly.inv.change.heat=点击切换至散热器插槽窗口。

gui.modular_server_assembler.info.missing_server=在组装台中放入服务器以显示服务器状态。
gui.modular_server_assembler.info.total_modules=§2已安装的所有模块数量：§a%s
gui.modular_server_assembler.info.total_cpus=§2已安装的 CPU 数量：§a%s
gui.modular_server_assembler.info.total_rams=§2已安装的 RAM 数量：§a%s
gui.modular_server_assembler.info.total_calculate_cards=§2已安装的计算卡数量：§a%s
gui.modular_server_assembler.info.total_extensions=§2已安装的扩展卡数量：§a%s
gui.modular_server_assembler.info.total_psus=§2已安装的 PSU 电源数量：§a%s
gui.modular_server_assembler.info.total_capacitors=§2已安装的电容器数量：§a%s

gui.modular_server_assembler.info.max_energy_cap=§6最大储能：§c%sRF
gui.modular_server_assembler.info.max_energy_consumption=§6最大能量消耗（Tick）：§c%sRF
gui.modular_server_assembler.info.max_energy_provision=§6最大能量输入（Tick）：§c%sRF
gui.modular_server_assembler.info.total_hardware_bandwidth=§9硬件带宽（总计）：§a%s
gui.modular_server_assembler.info.used_hardware_bandwidth=§9硬件带宽（已使用）：§e%s§f（§6%s§f）

gui.modular_server_assembler.calculate.expected=§b预期计算能力：
gui.modular_server_assembler.calculate.name=%s：
gui.modular_server_assembler.calculate.value=%s（效率：%s%%）

gui.modular_server_assembler.info.can_start=§b是否可启动：%s
gui.modular_server_assembler.info.can_start.true=§a可用
gui.modular_server_assembler.info.can_start.false=§c不可用

gui.modular_server_assembler.error=§e以下原因阻止了计算机启动：

gui.modular_server_assembler.error.dependencies.0=§c有插槽缺失前置。
gui.modular_server_assembler.error.dependencies.1=§c以下插槽被其他插槽所依赖，必须安装相应的模块后才可继续：

gui.modular_server_assembler.error.require_cpu=§c至少需要安装一个 CPU 模块。
gui.modular_server_assembler.error.require_ram=§c至少需要安装一个 RAM 模块。
gui.modular_server_assembler.error.require_psu=§c至少需要安装一个 PSU 电源。
gui.modular_server_assembler.error.require_capacitor=§c至少需要安装一个电容器。
gui.modular_server_assembler.error.hardware_bandwidth=§c使用的硬件带宽过高（最高 150%%）。

gui.modular_server_assembler.error.invalid_slot.0=§c有槽位安装了错误的模块。
gui.modular_server_assembler.error.invalid_slot.1=§c以下槽位中的模块是有问题的：

gui.estorage_controller.cell_info.tip.0=%s（%s）
gui.estorage_controller.cell_info.tip.1=类型使用：%s / %s
gui.estorage_controller.cell_info.tip.2=字节使用：%s / %s

gui.estorage_controller.cell_info.item=物品存储矩阵
gui.estorage_controller.cell_info.fluid=流体存储矩阵
gui.estorage_controller.cell_info.empty=未知

gui.estorage_controller.graph.fluid.percent=流体存储占用：%s%%
gui.estorage_controller.graph.item.percent=物品存储占用：%s%%
gui.estorage_controller.graph.total.percent=总存储占用：%s%%
gui.estorage_controller.graph.fluid_type=流体类型：%s / %s
gui.estorage_controller.graph.item_type=物品类型：%s / %s
gui.estorage_controller.graph.energy_usage=总耗能：%sAE/t
gui.estorage_controller.graph.energy_stored.percent=能量存储：%s%%
gui.estorage_controller.graph.energy_stored=能量存储：%sAE / %sAE
